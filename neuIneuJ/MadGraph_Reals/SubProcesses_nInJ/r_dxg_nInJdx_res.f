      REAL*8 FUNCTION MATRIX_DXG_NINJDX_RES(P,NHEL,IC,CHAN)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : d~ g -> ni nj d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER(NGRAPHS=  14,NEIGEN=  1) 
      include "genps.inc"
      include "nexternal.inc"
      include "maxamps_ninj.inc"
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER(NWAVEFUNCS=  24, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER(ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C
C VARIABLES TO APPLY THE DIAGRAM SUBTRACTION SCHEMES 
C
#define _EXTFUNCT_
#include "dsubtraction_ninj.h"
C  
C COLOR DATA
C  
      DATA Denom(1)/            1/                                       
      DATA(CF(i,1),i=1,1) /     4/                                  
C               T[ 1, 5, 2]                                                
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))        
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))        
      CALL OXXXXX(P(0,3),MNI,NHEL(3),+1*IC(3),W(1,3))         
      CALL IXXXXX(P(0,4),MNJ,NHEL(4),-1*IC(4),W(1,4))         
      CALL IXXXXX(P(0,5),ZERO,NHEL(5),-1*IC(5),W(1,5))   
      
      ! diagram 1
      CALL HIOXXX(W(1,4),W(1,1),GDLNJP,MDL,WDL,W(1, 6))                                                          
      CALL FVIXXX(W(1,5),W(1,2),GG,ZERO,ZERO,W(1,7))     
      CALL IOSXXX(W(1,7),W(1,3),W(1,6),GDLNIM,AMP(1))   
      ! diagram 2
      CALL HIOXXX(W(1,4),W(1,1),GDRNJP,MDR,WDR,W(1, 8))                                                          
      CALL IOSXXX(W(1,7),W(1,3),W(1,8),GDRNIM,AMP(2))   
      
      ! diagram 3 <- resonant
      CALL HIOXXX(W(1,5),W(1,3),GDLNIM,MDL,WDLR,W(1, 9))                                                          
      CALL VSSXXX(W(1,2),W(1,6),W(1,9),GC,AMP(3))     
      ! diagram 4 <- resonant
      CALL HIOXXX(W(1,5),W(1,3),GDRNIM,MDR,WDRR,W(1, 10))                                                          
      CALL VSSXXX(W(1,2),W(1,8),W(1,10),GC,AMP(4))     
      
      ! diagram 5 <- resonant
      CALL FVOXXX(W(1,1),W(1,2),GG,ZERO,ZERO,W(1,11))     
      CALL HIOXXX(W(1,4),W(1,11),GDLNJP,MDL,WDLR,W(1, 12))                                                          
      CALL IOSXXX(W(1,5),W(1,3),W(1,12),GDLNIM,AMP(5))       
      ! diagram 6 <- resonant
      CALL HIOXXX(W(1,4),W(1,11),GDRNJP,MDR,WDRR,W(1, 13))                                                          
      CALL IOSXXX(W(1,5),W(1,3),W(1,13),GDRNIM,AMP(6))    
      
      ! diagram 7
      CALL JIOCXX(W(1,4),W(1,3),GZNIJ,ZMASS,ZWIDTH,W(1, 14))                                                          
      CALL IOVXXX(W(1,7),W(1,1),W(1,14),GZD,AMP(7))       
      ! diagram 8
      CALL IOVXXX(W(1,5),W(1,11),W(1,14),GZD,AMP(8))        
      
      ! diagram 9
      CALL IXXXXX(P(0,3),MNI,NHEL(3),-1*IC(3),W(1,15))         
      CALL OXXXXX(P(0,4),MNJ,NHEL(4),+1*IC(4),W(1,16))         
      CALL HIOXXX(W(1,15),W(1,1),GDLNIP,MDL,WDL,W(1, 17))                                                          
      CALL FSOXXX(W(1,16),W(1,17),GDLNJM,ZERO,ZERO,W(1, 18))                                                          
      CALL IOVXXX(W(1,5),W(1,18),W(1,2),GG,AMP(9))          
      ! diagram 10
      CALL HIOXXX(W(1,15),W(1,1),GDRNIP,MDR,WDR,W(1, 19))                                                          
      CALL FSOXXX(W(1,16),W(1,19),GDRNJM,ZERO,ZERO,W(1, 20))                                                          
      CALL IOVXXX(W(1,5),W(1,20),W(1,2),GG,AMP(10))          
      
      ! diagram 11 <- resonant
      CALL HVSXXX(W(1,2),W(1,17),GC,MDL,WDLR,W(1,21))     
      CALL IOSXXX(W(1,5),W(1,16),W(1,21),GDLNJM,AMP(11))         
      ! diagram 12 <- resonant
      CALL HVSXXX(W(1,2),W(1,19),GC,MDR,WDRR,W(1,22))     
      CALL IOSXXX(W(1,5),W(1,16),W(1,22),GDRNJM,AMP(12))       
      
      ! diagram 13 <- resonant
      CALL HIOXXX(W(1,15),W(1,11),GDLNIP,MDL,WDLR,W(1, 23))                                                          
      CALL IOSXXX(W(1,5),W(1,16),W(1,23),GDLNJM,AMP(13))      
      ! diagram 14 <- resonant
      CALL HIOXXX(W(1,15),W(1,11),GDRNIP,MDR,WDRR,W(1, 24))                                                          
      CALL IOSXXX(W(1,5),W(1,16),W(1,24),GDRNJM,AMP(14))    
      
       ! S35 = MDL^2
      if(CHAN.eq.0) then
        JAMP(1) = -AMP(3)-AMP(5)
      ! S35 = MDR^2
      else if (CHAN.eq.1) then
        JAMP(1) =-AMP(4)-AMP(6)
      ! S45 = MDL^2
      else if (CHAN.eq.2) then
        JAMP(1) = AMP(11)+AMP(13)
      ! S45 = MDR^2
      else if (CHAN.eq.3) then
        JAMP(1) = AMP(12)+AMP(14)
      else
        print*,"error in r_dxg_ninjdx_res.f"
        stop
      endif
      
      MATRIX_DXG_NINJDX_RES = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP =(0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          MATRIX_DXG_NINJDX_RES =MATRIX_DXG_NINJDX_RES
     &                       +ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
 
      END
       
       
