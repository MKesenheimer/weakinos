#if 0
* udbar_n1x1_abbr1a.F
* abbreviations for {F[3, {1, Col1}], -F[4, {1, Col2}]} -> {F[11, {1}], -F[12, {1}]}
* generated by FormCalc 8.4 on 19-Jun-2015 12:35
#endif

#include "udbar_n1x1_vars.h"
#include "contains.h"


	subroutine udbar_n1x1_abbr1a
	implicit none

#include "udbar_n1x1_vars.h"


	Sub185 = T + U - MCha2(1) - MNeu2(1)

	Sub58 = MD2/Sqrt(2.D0) + Sqrt(2.D0)*(T - MCha2(1))

	Sub59 = MU2/Sqrt(2.D0) + Sqrt(2.D0)*(U - MCha2(1))

	Sub57 = MU2/Sqrt(2.D0) + Sqrt(2.D0)*(T - MNeu2(1))

	Sub60 = MD2/Sqrt(2.D0) + Sqrt(2.D0)*(U - MNeu2(1))

	call Bput(pave5(bb0),T,MGl2,MU2)

	call Bput(pave24(bb0),U,MD2,MGl2)

	Sub218 = pave5(PVC(bb0)) + pave5(PVC(bb1))

	LOOP(Sfe5, 1,2,1)

	call Cput(pave6(cc0,Sfe5),MD2,MNeu2(1),U,0.D0,MD2,MSf2(Sfe5,4,1))

	call Cput(pave7(cc0,Sfe5),MU2,MCha2(1),U,0.D0,MU2,MSf2(Sfe5,4,1))

	call Cput(pave8(cc0,Sfe5),MD2,MCha2(1),T,0.D0,MD2,MSf2(Sfe5,3,1))

	call Cput(pave9(cc0,Sfe5),MU2,MNeu2(1),T,0.D0,MU2,MSf2(Sfe5,3,1))

        call Dput(pave10(dd0,Sfe5),MD2,S,MCha2(1),U,MU2,MNeu2(1),
     &   0.D0,MD2,MU2,MSf2(Sfe5,4,1))

        call Dput(pave11(dd0,Sfe5),MD2,S,MNeu2(1),T,MU2,MCha2(1),
     &   0.D0,MD2,MU2,MSf2(Sfe5,3,1))

	call Bput(pave14(bb0,Sfe5),T,0.D0,MSf2(Sfe5,3,1))

	call Bput(pave15(bb0,Sfe5),U,0.D0,MSf2(Sfe5,4,1))

        Sub216(Sfe5) = 
     &   MSf2(Sfe5,3,1)*pave14(PVC(bb0),Sfe5) + 
     &    T*(3*pave14(PVC(bb0),Sfe5) + 2*pave14(PVC(bb1),Sfe5))

        Sub217(Sfe5) = 
     &   MSf2(Sfe5,4,1)*pave15(PVC(bb0),Sfe5) + 
     &    U*(3*pave15(PVC(bb0),Sfe5) + 2*pave15(PVC(bb1),Sfe5))

	Sub235(Sfe5) = pave8(PVC(cc2),Sfe5) + pave9(PVC(cc2),Sfe5)

	Sub260(Sfe5) = pave10(PVC(dd0),Sfe5) + pave10(PVC(dd1),Sfe5)

	Sub254(Sfe5) = pave11(PVC(dd0),Sfe5) + pave11(PVC(dd1),Sfe5)

        Sub261(Sfe5) = 
     &   Sub185*pave10(PVC(dd2),Sfe5) + pave12(PVC(cc0),Sfe5)

        Sub255(Sfe5) = 
     &   Sub185*pave11(PVC(dd2),Sfe5) + pave13(PVC(cc0),Sfe5)

        Sub236(Sfe5) = 
     &   pave14(PVC(bb0),Sfe5) + 
     &    (T - MCha2(1))*pave8(PVC(cc1),Sfe5) + 
     &    (T - MNeu2(1))*pave9(PVC(cc1),Sfe5) + T*Sub235(Sfe5)

        Sub237(Sfe5) = 
     &   Sqrt(2.D0)*Sub236(Sfe5) + Sub58*pave8(PVC(cc0),Sfe5) + 
     &    Sub57*pave9(PVC(cc0),Sfe5)

	ENDLOOP(Sfe5)

	LOOP(Sfe6, 1,2,1)

        call Cput(pave21(cc0,Sfe6),T,MNeu2(1),MU2,MGl2,MU2,
     &   MSf2(Sfe6,3,1))

        call Cput(pave17(cc0,Sfe6),U,MU2,MCha2(1),MD2,MGl2,
     &   MSf2(Sfe6,3,1))

        call Cput(pave18(cc0,Sfe6),T,MCha2(1),MD2,MGl2,MU2,
     &   MSf2(Sfe6,4,1))

        call Cput(pave16(cc0,Sfe6),U,MD2,MNeu2(1),MD2,MGl2,
     &   MSf2(Sfe6,4,1))

	Sub224(Sfe6) = pave16(PVC(cc1),Sfe6) + pave16(PVC(cc2),Sfe6)

	Sub226(Sfe6) = pave17(PVC(cc1),Sfe6) + pave17(PVC(cc2),Sfe6)

	ENDLOOP(Sfe6)

	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)

	Sub39(Sfe5,Sfe6) = T*Sub13(Sfe5,Sfe6) - Sub14(Sfe5,Sfe6)

        call Dput(pave20(dd0,Sfe5,Sfe6),T,MNeu2(1),S,MD2,MU2,
     &   MCha2(1),MGl2,MU2,MSf2(Sfe5,3,1),MSf2(Sfe6,4,1))

        call Dput(pave23(dd0,Sfe5,Sfe6),U,MU2,S,MNeu2(1),
     &   MCha2(1),MD2,MD2,MGl2,MSf2(Sfe5,3,1),MSf2(Sfe6,4,1))

        Sub220(Sfe5,Sfe6) = 
     &   Pi*(3*Sub11(Sfe5,Sfe6) - 3*U*Sub12(Sfe5,Sfe6)) + 
     &    8*Alfas*(pave22 + U*pave24(PVC(bb1)))*Sub38(Sfe5,Sfe6)

        Sub219(Sfe5,Sfe6) = 
     &   3*Pi*Sub39(Sfe5,Sfe6) - 
     &    Alfas*(8*pave22 - 8*Sub218*T)*Sub37(Sfe5,Sfe6)

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)

#include "contains.h"

	end
