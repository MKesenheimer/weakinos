#if 0
* CalcRenConst.F
* renormalization constants
* generated by FormCalc 8.4 on 20-Jan-2015 10:09
#endif

#include "decl.h"
#include "contains.h"


	subroutine CalcRenConst_test
	implicit none

#include "decl.h"

	integer Sfe3
        double precision ltlambda
        common/debug/ltlambda

        ! ssbar dup's
        ComplexType dup1, dup10, dup11, dup12, dup13, dup14, dup15
        ComplexType dup16, dup17, dup18, dup19, dup2, dup20, dup21
        ComplexType dup22, dup23, dup24, dup25, dup26, dup27, dup28
        ComplexType dup3, dup4, dup5, dup6, dup7, dup8, dup9

        ComplexType CNull
        ! MK: FormCalc creates an additional Finite Term if the
        !     quark masses are zero.
        !     Setting Finite = 0 solves the problem for SM-RenConsts.
        !     This problem occurs only when there are UV- and IR-
        !     divergences at the same time.
        RealType xm0,xz0
        
        CNull = (0d0, 0d0)
        xz0 = 0 ! set Finite part in field renormalization constant equal to zero
        xm0 = 0 ! set Finite part in mass renormalization constant equal to zero
        
c######################## common renormalization constants #############
        
        dMChaOS1(1) = 0
        dMChaOS1(2) = 0
        dMNeuOS1(1) = 0
        dZH1        = 0
        dZH2        = 0
        dMZsq1      = 0
        dTB1        = 0
        dZAA1       = 0
        dZZA1       = 0
        dMWsq1      = 0
        dSB1        = 0
        dCB1        = 0
        dSW1        = 0
        dZAZ1       = 0
        dZe1        = 0
        dZZZ1       = 0
        dZNeu1(1)   = 0
        dMino11     = 0
        dMino21     = 0
        dMUE1       = 0
        dAf1(4,1,1) = 0
        dAf1(4,2,2) = 0
        dAf1(4,3,3) = 0
        dMNeu1(1,1) = 0
        dMNeu1(1,2) = 0
        dMNeu1(1,3) = 0
        dMNeu1(1,4) = 0
        dMNeu1(2,1) = 0
        dMNeu1(3,1) = 0
        dMNeu1(4,1) = 0
        dZfL1(11,1,1) = 0
        dZfL1(11,2,1) = 0
        dZfL1(11,3,1) = 0
        dZfL1(11,4,1) = 0
        dZfR1(11,1,1) = 0
        dZfR1(11,2,1) = 0
        dZfR1(11,3,1) = 0
        dZfR1(11,4,1) = 0
        dMsq12Sf1(4,1) = 0
        dZW1 = 0

#ifdef DEBUGQ
        print*,"Lambda = ", ltlambda
        print*,"xz0 = ", xz0
        print*,"xm0 = ", xm0
#endif

c######################## uubar renormalization constants ##############

        dZbarfL1(3,1,1) = 
     &   1/(3.D0*Pi)*(Alfas*(Finite*xz0 -
     &        2*(B0i(bb0,MU2,0.D0,MU2) + B0i(bb1,MU2,0.D0,MU2)) + 
     &        MU2*(4*B0i(dbb0,MU2,0.D0,MU2) - 4*B0i(dbb1,MU2,0.D0,MU2))
     &        ))

#ifdef DEBUGQ
	DEB("CalcRenConst: dZbarfL1(3,1,1) =", dZbarfL1(3,1,1))
#endif

c######################## ddbar renormalization constants ##############

        dZfL1(4,1,1) = 
     &   1/(3.D0*Pi)*(Alfas*(Finite*xz0 -
     &        2*(B0i(bb0,MD2,0.D0,MD2) + B0i(bb1,MD2,0.D0,MD2)) + 
     &        MD2*(4*B0i(dbb0,MD2,0.D0,MD2) - 4*B0i(dbb1,MD2,0.D0,MD2))
     &        ))

#ifdef DEBUGQ
	DEB("CalcRenConst: dZbarfL1(4,1,1) =", dZbarfL1(4,1,1))
#endif



#include "contains.h"

	end
