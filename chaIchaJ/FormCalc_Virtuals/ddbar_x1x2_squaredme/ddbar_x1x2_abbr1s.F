#if 0
* ddbar_x1x2_abbr1s.F
* abbreviations for {F[4, {1, Col1}], -F[4, {1, Col2}]} -> {F[12, {1}], -F[12, {2}]}
* generated by FormCalc 8.4 on 17-Jun-2015 13:07
#endif

#include "ddbar_x1x2_vars.h"
#include "contains.h"


	subroutine ddbar_x1x2_abbr1s
	implicit none

#include "ddbar_x1x2_vars.h"


	Sub55 = dMWsq1 + MW2*(-2*dZe1 - dZbarfL1(4,1,1))

	Sub49 = 2*dCB1 - CB*(2*dZe1 + dZbarfR1(4,1,1))

	Sub67 = dMWsq1 + MW2*(-2*dZe1 - dZfL1(4,1,1))

	Sub41 = 2*dCB1 - CB*(2*dZe1 + dZfR1(4,1,1))

	Sub42 = CB*(dMWsq1*SW + 2*MW2*dSW1) + MW2*(Sub41*SW)

	Sub50 = CB*(dMWsq1*SW + 2*MW2*dSW1) + MW2*(Sub49*SW)

	Sub56 = SB*Sub55*SW + 2*MW2*(dSW1*SB + dSB1*SW)

	Sub68 = SB*Sub67*SW + 2*MW2*(dSW1*SB + dSB1*SW)

	Sub71 = 2*dSW1 + SW*(-2*dZe1 - dZfL1(4,1,1))

        Sub73 = dZbarfR1(12,1,1)*VChaC(1,1) + 
     &    dZbarfR1(12,1,2)*VChaC(2,1)

        Sub74 = dZbarfR1(12,1,1)*VChaC(1,2) + 
     &    dZbarfR1(12,1,2)*VChaC(2,2)

	Sub30 = 4*CW2**2*dZe1 + CW2*(1 + 2*CW2)*dZZZ1

	Sub57 = MU*Sub56 - 2*MW2*(SB*SW*dMf1(3,1))

	Sub69 = MU*Sub68 - 2*MW2*(SB*SW*dMf1(3,1))

	Sub43 = MD*Sub42 - 2*MW2*(CB*SW*dMf1(4,1))

	Sub51 = MD*Sub50 - 2*MW2*(CB*SW*dMf1(4,1))

	Sub60 = 2*dSW1 + SW*(-2*dZe1 - dZbarfL1(4,1,1))

        Sub44 = dZbarfL1(12,1,1)*UCha(1,2) + 
     &    dZbarfL1(12,1,2)*UCha(2,2)

	Sub61 = dZfR1(12,1,2)*VCha(1,1) + dZfR1(12,2,2)*VCha(2,1)

	Sub58 = dZfR1(12,1,2)*VCha(1,2) + dZfR1(12,2,2)*VCha(2,2)

	Sub45 = MD*MW2*(CB*Sub44*SW) - Sub43*UCha(1,2)

	Sub47 = dZfL1(12,1,2)*UChaC(1,2) + dZfL1(12,2,2)*UChaC(2,2)

	Sub59 = MU*MW2*(SB*Sub58*SW) - Sub57*VCha(2,2)

	Sub31 = Sub30*SW + 2*SW2*dSW1 - CW2*(6*dSW1 - 2*dZe1*SW)

	Sub28 = 2*dZe1 + dZZZ1 + dZbarfR1(4,1,1) + dZfR1(4,1,1)

	Sub29 = CW2**2*dZAZ1 - CW*(2*dSW1 + CW2*(Sub28*SW))

        Sub32 = 2*CW2**2*SW2*dZAZ1 + 
     &    CW*(Sub31 + CW2*(1 + 2*CW2)*
     &        (SW*(dZbarfL1(4,1,1) + dZfL1(4,1,1))))

        Sub87 = 1/(CW*CW2)*
     &    (3*Pi*Sub29 + 2*CW*CW2*(Alfas*Finite*SW))/SW

        Sub88 = 1/(CW*CW2)*
     &    (3*Pi*Sub32 - CW*CW2*(2 + 4*CW2)*(Alfas*Finite*SW))/SW

	pave3 = A0(MGl2)

	call Bput(pave4(bb0),S,MD2,MD2)

	call Cput(pave5(cc0),MD2,S,MD2,0.D0,MD2,MD2)

	Sub109 = pave5(PVC(cc0)) + pave5(PVC(cc1)) + pave5(PVC(cc2))

	LOOP(Sfe5, 1,2,1)

        Sub62(Sfe5) = dZSf1(1,Sfe5,3,1)*USfC(1,2,3,1) + 
     &    dZSf1(2,Sfe5,3,1)*USfC(2,2,3,1)

        Sub66(Sfe5) = dZbarSf1(1,Sfe5,3,1)*USf(1,2,3,1) + 
     &    dZbarSf1(2,Sfe5,3,1)*USf(2,2,3,1)

        Sub75(Sfe5) = -(2*MW*(SB*Sub73*USf(Sfe5,1,3,1))) + 
     &    Sqrt(2.D0)*MU*(Sub74*USf(Sfe5,2,3,1))

        Sub48(Sfe5) = dZSf1(1,Sfe5,3,1)*USfC(1,1,3,1) + 
     &    dZSf1(2,Sfe5,3,1)*USfC(2,1,3,1)

        Sub63(Sfe5) = -(2*MW*(SB*Sub48(Sfe5)*VCha(2,1))) + 
     &    Sqrt(2.D0)*MU*(Sub62(Sfe5)*VCha(2,2))

        Sub40(Sfe5) = dZbarSf1(1,Sfe5,3,1)*USf(1,1,3,1) + 
     &    dZbarSf1(2,Sfe5,3,1)*USf(2,1,3,1)

        Sub70(Sfe5) = MU*MW2*(SB*SW*Sub66(Sfe5)) - 
     &    Sub69*USf(Sfe5,2,3,1)

        Sub52(Sfe5) = MD*MW2*(CB*SW*Sub48(Sfe5)) - 
     &    Sub51*USfC(Sfe5,1,3,1)

        Sub64(Sfe5) = -(2*MW*
     &       (SB2*USfC(Sfe5,1,3,1)*(Sub61*SW - Sub60*VCha(2,1))))+
     &      SB*SW*Sub63(Sfe5)

        Sub46(Sfe5) = MD*MW2*(CB*SW*Sub40(Sfe5)*UCha(1,2)) + 
     &    Sub45*USf(Sfe5,1,3,1)

        Sub53(Sfe5) = MD*MW2*(CB*Sub47*SW*USfC(Sfe5,1,3,1)) + 
     &    Sub52(Sfe5)*UChaC(2,2)

        Sub65(Sfe5) = MW2*Sub64(Sfe5) + 
     &    Sqrt(2.D0)*(Sub59*USfC(Sfe5,2,3,1))

        call Cput(pave14(cc0,Sfe5),S,MCha2(1),MCha2(2),MD2,MD2,
     &   MSf2(Sfe5,3,1))

        Sub96(Sfe5) = -(2*MW*
     &       (CB*UCha(1,1)*USfC(Sfe5,1,4,1))) + 
     &    Sqrt(2.D0)*MD*(UCha(1,2)*USfC(Sfe5,2,4,1))

	Sub72(Sfe5) = SW*Sub40(Sfe5) - Sub71*USf(Sfe5,1,3,1)

        Sub76(Sfe5) = -(2*MW*(SB2*Sub72(Sfe5)*VChaC(1,1))) + 
     &    SB*SW*Sub75(Sfe5)

        Sub77(Sfe5) = MW2*Sub76(Sfe5) + 
     &    Sqrt(2.D0)*(Sub70(Sfe5)*VChaC(1,2))

	Sub78(Sfe5) = Sub2(Sfe5)*Sub65(Sfe5) + Sub1(Sfe5)*Sub77(Sfe5)

	ENDLOOP(Sfe5)

	LOOP(Sfe6, 1,2,1)

        Sub37(Sfe6) = -(2*MW*
     &       (CB*UCha(1,1)*USfC(Sfe6,1,4,1))) + 
     &    Sqrt(2.D0)*MD*(UCha(1,2)*USfC(Sfe6,2,4,1))

        Sub38(Sfe6) = -(2*MW*
     &       (CB*UChaC(2,1)*USf(Sfe6,1,4,1))) + 
     &    Sqrt(2.D0)*MD*(UChaC(2,2)*USf(Sfe6,2,4,1))

        Sub13(Sfe6) = -(2*MW*
     &       (SB*USfC(Sfe6,1,3,1)*VCha(2,1))) + 
     &    Sqrt(2.D0)*MU*(USfC(Sfe6,2,3,1)*VCha(2,2))

	ENDLOOP(Sfe6)

	LOOP(Sfe7, 1,2,1)

	pave2(Sfe7) = A0(MSf2(Sfe7,3,1))

	ENDLOOP(Sfe7)

	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)

        call Cput(pave13(cc0,Sfe5,Sfe6),MD2,S,MD2,MGl2,
     &   MSf2(Sfe5,4,1),MSf2(Sfe6,4,1))

        Sub7(Sfe5,Sfe6) = 
     &   dZbarSf1(Sfe5,Sfe6,3,1) + dZSf1(Sfe6,Sfe5,3,1)

        Sub19(Sfe5,Sfe6) = 
     &   USf(Sfe6,1,3,1)*USfC(Sfe5,1,3,1) + 
     &    USf(Sfe6,2,3,1)*USfC(Sfe5,2,3,1)

        Sub33(Sfe5,Sfe6) = 
     &   -(2*SW2*(USf(Sfe6,2,4,1)*USfC(Sfe5,2,4,1))) + 
     &    USf(Sfe6,1,4,1)*(2*CW2*USfC(Sfe5,1,4,1) + 
     &       USfC(Sfe5,1,4,1))

        Sub6(Sfe5,Sfe6) = 
     &   2*dMSfsq1(Sfe6,Sfe5,3,1) + 
     &    dZbarSf1(Sfe5,Sfe6,3,1)*MSf2(Sfe5,3,1) + 
     &    dZSf1(Sfe6,Sfe5,3,1)*MSf2(Sfe6,3,1)

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)

	LOOP(Sfe7, 1,2,1)
	LOOP(Sfe5, 1,2,1)

        Sub20(Sfe5,Sfe7) = 
     &   USf(Sfe7,1,3,1)*USfC(Sfe5,1,3,1) - 
     &    USf(Sfe7,2,3,1)*USfC(Sfe5,2,3,1)

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe7)

	LOOP(Sfe7, 1,2,1)
	LOOP(Sfe6, 1,2,1)

        Sub21(Sfe6,Sfe7) = 
     &   USf(Sfe6,1,3,1)*USfC(Sfe7,1,3,1) - 
     &    USf(Sfe6,2,3,1)*USfC(Sfe7,2,3,1)

	ENDLOOP(Sfe6)
	ENDLOOP(Sfe7)

	LOOP(Sfe7, 1,2,1)
	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)

        Sub27(Sfe5,Sfe6,Sfe7) = 
     &   48*Alfa*(Alfas*Sub20(Sfe5,Sfe7)*Sub21(Sfe6,Sfe7))

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)
	ENDLOOP(Sfe7)

#include "contains.h"

	end
