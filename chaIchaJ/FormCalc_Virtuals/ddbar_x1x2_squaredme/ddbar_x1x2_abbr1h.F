#if 0
* ddbar_x1x2_abbr1h.F
* abbreviations for {F[4, {1, Col1}], -F[4, {1, Col2}]} -> {F[12, {1}], -F[12, {2}]}
* generated by FormCalc 8.4 on 17-Jun-2015 13:07
#endif

#include "ddbar_x1x2_vars.h"
#include "contains.h"


	subroutine ddbar_x1x2_abbr1h
	implicit none

#include "ddbar_x1x2_vars.h"


	F14 = -ChainB1(Spinor(3,1,2),0,k(1),0,Spinor(4,-1,1))

	F11 = -ChainV0(Spinor(3,1,2),0,0,Spinor(4,-1,1))

	F15 = ChainB0(Spinor(4,-1,1),1,0,Spinor(1,1,1))

	F16 = ChainV1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F17 = -ChainB1(Spinor(2,-1,2),0,k(3),0,Spinor(1,1,1))

	F18 = ChainV1(Spinor(3,1,2),0,k(2),0,Spinor(1,1,1))

	F12 = ChainV0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

	F9 = -ChainB0(Spinor(2,-1,2),0,0,Spinor(1,1,1))

	F10 = ChainB0(Spinor(3,1,2),0,0,Spinor(4,-1,1))

	F19 = ChainV1(Spinor(2,-1,2),0,k(1),0,Spinor(4,-1,1))

	F13 = ChainV1(Spinor(3,1,2),0,k(1),0,Spinor(4,-1,1))

	Sub91 = F14 - F11*MCha(1) + F10*MCha(2)

	Sub85 = 2*F14 - F11*MCha(1) + F10*MCha(2)

	Sub84 = 2*F13 - F10*MCha(1) + F11*MCha(2)

	Sub95 = F18*F7*MCha(1) + F8*(2*F7*Sub93 - F19*MCha(2))

	Sub90 = F13 - F10*MCha(1) + F11*MCha(2)

        Sub89 = 1/SW2*((F2*F3*Sub3 + F7*F8*Sub4)*Sub88 + 
     &      2*SW2*((F5*F6*Sub3 + F1*F4*Sub4)*Sub87))

	Sub98 = F18*MCha(1) + F8*(U - MCha2(1) - MCha2(2))

	Sub92 = F18*MCha(1) + F8*(U - MCha2(1))

	Sub94 = F19*MCha(2) - F7*(U - MCha2(2))

	Sub99 = F7*Sub98 - (F19*F8 - F15*F3*MCha(1))*MCha(2)

	LOOP(Sfe5, 1,2,1)

        Sub54(HelInd(Sfe5)) = 
     &   F6*F7*Sub1(Sfe5)*Sub46(Sfe5) + 
     &    F5*F8*Sub2(Sfe5)*Sub53(Sfe5)

        Sub79(HelInd(Sfe5)) = 
     &   (Sqrt(2.D0)*(SB2*Sub54(HelInd(Sfe5))) + 
     &      CB2*F7*F8*Sub78(Sfe5))/(CB2*SB2)

        Sub115(HelInd(Sfe5)) = 
     &   Sub92*pave9(PVC(dd13),Sfe5) + 
     &    F8*Sub93*pave9(PVC(dd2),Sfe5)

        Sub116(HelInd(Sfe5)) = 
     &   Sub95*pave9(PVC(dd3),Sfe5) + Sub99*pave9(PVC(dd33),Sfe5)

	ENDLOOP(Sfe5)

	LOOP(Sfe6, 1,2,1)

        Sub81(HelInd(Sfe6)) = 
     &   F8*Mino3C*USf(Sfe6,1,4,1) - F6*MCha(1)*USf(Sfe6,2,4,1)

        Sub80(HelInd(Sfe6)) = 
     &   F8*Mino3C*MCha(1)*USf(Sfe6,1,4,1) - 
     &    F6*MSf2(Sfe6,4,1)*USf(Sfe6,2,4,1)

        Sub83(HelInd(Sfe6)) = 
     &   F7*Mino3*USfC(Sfe6,1,4,1) - F5*MCha(2)*USfC(Sfe6,2,4,1)

        Sub82(HelInd(Sfe6)) = 
     &   F7*Mino3*MCha(2)*USfC(Sfe6,1,4,1) - 
     &    F5*MSf2(Sfe6,4,1)*USfC(Sfe6,2,4,1)

        Sub105(HelInd(Sfe6)) = 
     &   pave11(PVC(cc0),Sfe6)*Sub80(HelInd(Sfe6)) + 
     &    MCha(1)*pave11(PVC(cc1),Sfe6)*Sub81(HelInd(Sfe6))

        Sub106(HelInd(Sfe6)) = 
     &   pave12(PVC(cc0),Sfe6)*Sub82(HelInd(Sfe6)) + 
     &    MCha(2)*pave12(PVC(cc1),Sfe6)*Sub83(HelInd(Sfe6))

	ENDLOOP(Sfe6)

	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)

        Sub35(HelInd(Sfe5),Sfe6) = 
     &   F7*F8*USf(Sfe5,1,4,1)*USfC(Sfe6,1,4,1) + 
     &    F1*F4*USf(Sfe5,2,4,1)*USfC(Sfe6,2,4,1)

        Sub107(HelInd(Sfe5),Sfe6) = 
     &   F7*Sub1(Sfe5)*Sub105(HelInd(Sfe6))*Sub37(Sfe6)*
     &     USf(Sfe5,1,3,1) + 
     &    F8*Sub106(HelInd(Sfe6))*Sub2(Sfe5)*Sub38(Sfe6)*
     &     USfC(Sfe5,1,3,1)

        Sub97(HelInd(Sfe5),Sfe6) = 
     &   F16*USf(Sfe5,1,4,1)*USfC(Sfe6,1,4,1) + 
     &    F17*USf(Sfe5,2,4,1)*USfC(Sfe6,2,4,1)

        Sub39(HelInd(Sfe5),Sfe6) = 
     &   F6*F7*Sub1(Sfe5)*Sub37(Sfe6)*USf(Sfe5,1,3,1)*
     &     USf(Sfe6,2,4,1) + 
     &    F5*F8*Sub2(Sfe5)*Sub38(Sfe6)*USfC(Sfe5,1,3,1)*
     &     USfC(Sfe6,2,4,1)

        Sub111(HelInd(Sfe5),Sfe6) = 
     &   (F13 - F10*MCha(1))*pave8(PVC(dd11),Sfe5,Sfe6) + 
     &    F13*pave8(PVC(dd12),Sfe5,Sfe6) + 
     &    Sub90*pave8(PVC(dd13),Sfe5,Sfe6)

        Sub108(HelInd(Sfe5),Sfe6) = 
     &   -Sub107(HelInd(Sfe5),Sfe6) + 
     &    pave10(PVC(bb0))*Sub39(HelInd(Sfe5),Sfe6)

        Sub86(HelInd(Sfe5),Sfe6) = 
     &   F12*Mino3*USf(Sfe5,2,4,1)*USfC(Sfe6,1,4,1) + 
     &    F9*Mino3C*USf(Sfe5,1,4,1)*USfC(Sfe6,2,4,1)

        Sub34(HelInd(Sfe5),Sfe6) = 
     &   F2*F3*USf(Sfe5,1,4,1)*USfC(Sfe6,1,4,1) + 
     &    F5*F6*USf(Sfe5,2,4,1)*USfC(Sfe6,2,4,1)

        Sub110(HelInd(Sfe5),Sfe6) = 
     &   (F13 - F10*MCha(1))*pave8(PVC(dd0),Sfe5,Sfe6) + 
     &    F13*pave8(PVC(dd2),Sfe5,Sfe6) + 
     &    Sub90*pave8(PVC(dd3),Sfe5,Sfe6)

        Sub102(HelInd(Sfe5),Sfe6) = 
     &   (F13*Sub3 + F14*Sub4)*pave13(PVC(cc1),Sfe5,Sfe6) + 
     &    (Sub3*Sub90 + Sub4*Sub91)*pave13(PVC(cc2),Sfe5,Sfe6)

        Sub103(HelInd(Sfe5),Sfe6) = 
     &   (Sub3*Sub84 + Sub4*Sub85)*pave13(PVC(cc0),Sfe5,Sfe6) + 
     &    2*Sub102(HelInd(Sfe5),Sfe6)

        Sub36(HelInd(Sfe5),Sfe6) = 
     &   Sub3*Sub34(HelInd(Sfe5),Sfe6) + 
     &    Sub4*Sub35(HelInd(Sfe5),Sfe6)

        Sub100(HelInd(Sfe5),Sfe6) = 
     &   -Sub86(HelInd(Sfe5),Sfe6) + Sub97(HelInd(Sfe5),Sfe6)

        Sub104(HelInd(Sfe5),Sfe6) = 
     &   4*pave13(PVC(cc00),Sfe5,Sfe6)*Sub36(HelInd(Sfe5),Sfe6) + 
     &    Sub103(HelInd(Sfe5),Sfe6)*Sub86(HelInd(Sfe5),Sfe6)

        Sub112(HelInd(Sfe5),Sfe6) = 
     &   (F13 - F10*MCha(1))*pave8(PVC(dd1),Sfe5,Sfe6)*
     &     Sub100(HelInd(Sfe5),Sfe6) + 
     &    Sub111(HelInd(Sfe5),Sfe6)*Sub97(HelInd(Sfe5),Sfe6)

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)

#include "contains.h"

	end
