#!/bin/bash
#
#  This runs a quick survey over all of the processes to determine
#  which channels in each process are important. This must be run
#  before you call integrate since it sets up important information
#  about each process. Must be run from main directory or bin directory
#
#  Usage: survey compression parallel [name]
#
#  parallel is 0 for serial, 1 for PBS, 2 for multicore
#  name is queue name for PBS or number of cores for multicore
#  
#   First we need to get into the main directory
#
if [[  ! -d ./bin  ]]; then
    cd ../
    if [[ ! -d ./bin ]]; then
	echo "Error: survey must be executed from the main, or bin directory"
	exit
    fi
fi
#
#  Now let shell know where to find important executables
#
main=`pwd`
dirbin=$main/bin
# Begin Local versions
# set dirbin = /home/tstelzer/bin/MG_ME
# End Local versions 
qsub=qsub

if [[  "$1" == ""  ]]; then
    echo 'Enter 2 for multi-core, 1 for parallel, 0 for serial run' 
    read mode
else
    mode=$1
fi
if [[  $mode -gt 0 ]]; then
   if [[  "$2" == ""  ]]; then
     if [[  $mode -eq 1 ]]; then
       echo 'Enter name for jobs on pbs queue'
     elif [[  $mode -eq 2 ]]; then
       echo 'Enter number of cores'
     fi
     read n
   else
       n=$2
   fi
fi

# check makefile version
c=`awk '/^[^#].*=.*pdlabel/{print $1}' Cards/run_card.dat`
if [[ $c == "'lhapdf'" ]]; then
    echo Using LHAPDF interface!
    if [[ -e $main/Source/makefile_default ]]; then
	echo already loaded
    else
	cp $main/Source/makefile $main/Source/makefile_default
	cp $main/Source/PDF/makefile $main/Source/PDF/makefile_default
	cp $main/Source/DHELAS/Makefile $main/Source/DHELAS/Makefile_default
	cp $main/Source/MODEL/makefile $main/Source/MODEL/makefile_default
	cp $main/Source/CERNLIB/makefile $main/Source/CERNLIB/makefile_default
	cp $main/SubProcesses/makefile $main/SubProcesses/makefile_default
	cp $main/SubProcesses/makefile_mo $main/SubProcesses/makefile_mo_default
	cp $main/Source/makefile_lhapdf $main/Source/makefile
	cp $main/Source/PDF/makefile_lhapdf $main/Source/PDF/makefile    
	cp $main/SubProcesses/makefile_lhapdf $main/SubProcesses/makefile    
	cp $main/SubProcesses/makefile_mo_lhapdf $main/SubProcesses/makefile_mo  
	sed -i.bak "s|f77|gfortran|g" $main/Source/DHELAS/Makefile
	sed -i.bak "s|f77|gfortran|g" $main/Source/MODEL/makefile
	sed -i.bak "s|f77|gfortran|g" $main/Source/CERNLIB/makefile
        #    cp $lhadir/lib/libLHAPDF.a $main/lib/.
    fi
else
    if [[ -e $main/Source/makefile_default ]]; then
	    mv Source/makefile_default Source/makefile
	    mv Source/PDF/makefile_default Source/PDF/makefile
	    mv Source/DHELAS/Makefile_default Source/DHELAS/Makefile
	    mv Source/MODEL/makefile_default Source/MODEL/makefile
	    mv Source/CERNLIB/makefile_default Source/CERNLIB/makefile
	    mv SubProcesses/makefile_default SubProcesses/makefile
    fi
fi

echo "Compiling libraries"
if [[ -d Source ]]; then
    echo "Compiling Libraries" >& status
    cd Source
    make ../bin/sum_html >/dev/null
    make all >& /dev/null
    cd ..
else
    echo 'Error Source directory not found'
    exit
fi
if [[ -d SubProcesses ]]; then
    if [[  $mode -gt 0 ]]; then    
	echo "Creating Jobs" >& status
    else
	echo " " >& status
    fi
    cd SubProcesses
    r=0
    if [[ -e randinit ]]; then
	source ./randinit
    fi
    for i in `cat subproc.mg` ; do
	r=`expr $r + 1`
    done
#    echo "Using random number seed offset = " $r
    echo "r=$r" >& randinit
    echo "Working on subprocess:"
    for i in `cat subproc.mg` ; do
	cd $i
	echo -n "   " $i "   "
	rm -f ajob* >& /dev/null
	rm -f wait.ajob* >& /dev/null
	rm -f run.ajob* >& /dev/null
	rm -f done.ajob* >& /dev/null
	make gensym > /dev/null
        ./gensym >& gensym.log
	chmod +x ajob*
	make madevent > /dev/null
	for job in ajob*  ; do
	    touch wait.$job
	    if [[ $mode == 1 ]]; then
		$qsub -N $n $job >> ../../running_jobs
	    elif [[ $mode == 2 ]]; then
		../../bin/multicore $n $job
		sleep 1
	    else
		time nice ./$job >/dev/null
		../../bin/sum_html >/dev/null
	    fi
	done
	cd ..
	if [[ $mode == 0  ]]; then 
	    ../bin/sum_html 
	fi
    done
    if [[ $mode -ge 1 ]]; then
	$dirbin/monitor $3
	../bin/sumall
    fi
    cd ../
else
    echo "Error could not find SubProcesses"
    exit
fi
$dirbin/gen_crossxhtml-pl $3
