#if 0
* CalcRenConst.F
* renormalization constants
* generated by FormCalc 8.4 on 12-Feb-2015 16:54
#endif

#include "decl.h"
#include "contains.h"


	subroutine CalcRenConst
	implicit none

#include "decl.h"

	integer Sfe3

	ComplexType dup1

	dMWsq1 = 0

#ifdef DEBUGQ
	DEB("dMWsq1 =", dMWsq1)
#endif

	dMZsq1 = 0

#ifdef DEBUGQ
	DEB("dMZsq1 =", dMZsq1)
#endif

	dSW1 = 0

#ifdef DEBUGQ
	DEB("dSW1 =", dSW1)
#endif

	dZAA1 = 0

#ifdef DEBUGQ
	DEB("dZAA1 =", dZAA1)
#endif

	dZAZ1 = 0

#ifdef DEBUGQ
	DEB("dZAZ1 =", dZAZ1)
#endif

	dZZA1 = 0

#ifdef DEBUGQ
	DEB("dZZA1 =", dZZA1)
#endif

	dZZZ1 = 0

#ifdef DEBUGQ
	DEB("dZZZ1 =", dZZZ1)
#endif

        dZe1 = 0

#ifdef DEBUGQ
        DEB("dZe1 =", dZe1)
#endif

c###################### uubar ##########################################

        ! MK: FormCalc creates an additional Finite Term here if the
        !     quark masses are zero.
        !     Setting Finite = 0 solves the problem for SM-RenConsts.
        !     This problem occurs only when there are UV- and IR-
        !     divergences at the same time.
        dup1 = 1/Pi*(Alfas*
     &      (1/3.D0*0 - 
     &        2/3.D0*(B0i(bb0,MU2,0.D0,MU2) + B0i(bb1,MU2,0.D0,MU2)) + 
     &        MU2*(4/3.D0*B0i(dbb0,MU2,0.D0,MU2) - 
     &           4/3.D0*B0i(dbb1,MU2,0.D0,MU2))))
        
        dZbarfL1(3,1,1) = dup1
        
#ifdef DEBUGQ
        print*,"dZbarfL1(SM) = ", dup1
#endif

        LOOP(Sfe3, 1,2,1)

        dZbarfL1(3,1,1) = 
     &   dZbarfL1(3,1,1) - 
     &    1/(3.D0*MU*Pi)*(Alfas*
     &       (-(2*MU*(MU2*(B0i(dbb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &                 (USf(Sfe3,1,3,1)*USfC(Sfe3,1,3,1) + 
     &                   USf(Sfe3,2,3,1)*USfC(Sfe3,2,3,1))) + 
     &              B0i(bb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &               USf(Sfe3,1,3,1)*USfC(Sfe3,1,3,1))) + 
     &         Mino3*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) - 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,2,3,1)*USfC(Sfe3,1,3,1) - 
     &         Mino3C*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) + 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,1,3,1)*USfC(Sfe3,2,3,1)))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZbarfL1(3,1,1) =", dZbarfL1(3,1,1))
#endif

        dZbarfR1(3,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZbarfR1(3,1,1) = 
     &   dZbarfR1(3,1,1) + 
     &    1/(3.D0*MU*Pi)*(Alfas*
     &       (2*MU*(MU2*(B0i(dbb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &               (USf(Sfe3,1,3,1)*USfC(Sfe3,1,3,1) + 
     &                 USf(Sfe3,2,3,1)*USfC(Sfe3,2,3,1))) + 
     &            B0i(bb1,MU2,MGl2,MSf2(Sfe3,3,1))*USf(Sfe3,2,3,1)*
     &             USfC(Sfe3,2,3,1)) + 
     &         Mino3*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) + 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,2,3,1)*USfC(Sfe3,1,3,1) - 
     &         Mino3C*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) - 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,1,3,1)*USfC(Sfe3,2,3,1)))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZbarfR1(3,1,1) =", dZbarfR1(3,1,1))
#endif

        dZfL1(3,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZfL1(3,1,1) = 
     &   dZfL1(3,1,1) + 1/(3.D0*MU*Pi)*
     &     (Alfas*(2*MU*(MU2*
     &             (B0i(dbb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &               (USf(Sfe3,1,3,1)*USfC(Sfe3,1,3,1) + 
     &                 USf(Sfe3,2,3,1)*USfC(Sfe3,2,3,1))) + 
     &            B0i(bb1,MU2,MGl2,MSf2(Sfe3,3,1))*USf(Sfe3,1,3,1)*
     &             USfC(Sfe3,1,3,1)) + 
     &         Mino3*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) + 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,2,3,1)*USfC(Sfe3,1,3,1) - 
     &         Mino3C*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) - 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,1,3,1)*USfC(Sfe3,2,3,1)))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZfL1(3,1,1) =", dZfL1(3,1,1))
#endif

        dZfR1(3,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZfR1(3,1,1) = 
     &   dZfR1(3,1,1) - 1/(3.D0*MU*Pi)*
     &     (Alfas*(-(2*MU*(MU2*
     &               (B0i(dbb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &                 (USf(Sfe3,1,3,1)*USfC(Sfe3,1,3,1) + 
     &                   USf(Sfe3,2,3,1)*USfC(Sfe3,2,3,1))) + 
     &              B0i(bb1,MU2,MGl2,MSf2(Sfe3,3,1))*
     &               USf(Sfe3,2,3,1)*USfC(Sfe3,2,3,1))) + 
     &         Mino3*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) - 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,2,3,1)*USfC(Sfe3,1,3,1) - 
     &         Mino3C*(B0i(bb0,MU2,MGl2,MSf2(Sfe3,3,1)) + 
     &            2*MU2*B0i(dbb0,MU2,MGl2,MSf2(Sfe3,3,1)))*
     &          USf(Sfe3,1,3,1)*USfC(Sfe3,2,3,1)))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZfR1(3,1,1) =", dZfR1(3,1,1))
#endif

c###################### ddbar ##########################################

        ! MK: FormCalc creates an additional Finite Term here if the
        !     quark masses are zero.
        !     Setting Finite = 0 solves the problem for SM-RenConsts.
        !     This problem occurs only when there are UV- and IR-
        !     divergences at the same time.
        dup1 = 1/Pi*(Alfas*
     &      (1/3.D0*0 - 
     &        2/3.D0*(B0i(bb0,MD2,0.D0,MD2) + B0i(bb1,MD2,0.D0,MD2)) + 
     &        MD2*(4/3.D0*B0i(dbb0,MD2,0.D0,MD2) - 
     &           4/3.D0*B0i(dbb1,MD2,0.D0,MD2))))
     
        dZbarfL1(4,1,1) = dup1
        
        LOOP(Sfe3, 1,2,1)

        dZbarfL1(4,1,1) = 
     &   dZbarfL1(4,1,1) - 
     &    1/(3.D0*MD*Pi)*(Alfas*
     &       (-2*(MD*(MD2*(B0i(dbb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                  (USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1) + 
     &                    USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &               B0i(bb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1)) + 
     &            MD2*(B0i(dbb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &               (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) + 
     &                 Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))+
     &           B0i(bb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &          (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) - 
     &            Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZbarfL1(4,1,1) =", dZbarfL1(4,1,1))
#endif

        dZbarfR1(4,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZbarfR1(4,1,1) = 
     &   dZbarfR1(4,1,1) + 
     &    1/(3.D0*MD*Pi)*(Alfas*
     &       (2*(MD2*(B0i(dbb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &               (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) + 
     &                 Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))) + 
     &            MD*(MD2*(B0i(dbb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                  (USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1) + 
     &                    USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &               B0i(bb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &         B0i(bb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &          (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) - 
     &            Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZbarfR1(4,1,1) =", dZbarfR1(4,1,1))
#endif

        dZfL1(4,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZfL1(4,1,1) = 
     &   dZfL1(4,1,1) + 1/(3.D0*MD*Pi)*
     &     (Alfas*(2*(MD*(MD2*
     &                (B0i(dbb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                  (USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1) + 
     &                    USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &               B0i(bb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1)) + 
     &            MD2*(B0i(dbb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &               (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) + 
     &                 Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))+
     &           B0i(bb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &          (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) - 
     &            Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZfL1(4,1,1) =", dZfL1(4,1,1))
#endif

        dZfR1(4,1,1) = dup1

        LOOP(Sfe3, 1,2,1)

        dZfR1(4,1,1) = 
     &   dZfR1(4,1,1) - 1/(3.D0*MD*Pi)*
     &     (Alfas*(-2*(MD2*
     &             (B0i(dbb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &               (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) + 
     &                 Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))) + 
     &            MD*(MD2*(B0i(dbb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                  (USf(Sfe3,1,4,1)*USfC(Sfe3,1,4,1) + 
     &                    USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &               B0i(bb1,MD2,MGl2,MSf2(Sfe3,4,1))*
     &                USf(Sfe3,2,4,1)*USfC(Sfe3,2,4,1))) + 
     &         B0i(bb0,MD2,MGl2,MSf2(Sfe3,4,1))*
     &          (Mino3*USf(Sfe3,2,4,1)*USfC(Sfe3,1,4,1) - 
     &            Mino3C*USf(Sfe3,1,4,1)*USfC(Sfe3,2,4,1))))

        ENDLOOP(Sfe3)

#ifdef DEBUGQ
        DEB("dZfR1(4,1,1) =", dZfR1(4,1,1))
#endif

#include "contains.h"

	end
