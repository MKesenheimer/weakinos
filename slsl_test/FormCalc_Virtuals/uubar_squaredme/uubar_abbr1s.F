#if 0
* uubar_abbr1s.F
* abbreviations for {F[3, {1, Col1}], -F[3, {1, Col2}]} -> {S[12, {2, 1}], -S[12, {2, 1}]}
* generated by FormCalc 8.4 on 13-Feb-2015 10:22
#endif

#include "uubar_vars.h"
#include "contains.h"


	subroutine uubar_abbr1s
	implicit none

#include "uubar_vars.h"


	Sub5 = 8*CW2**2*dZe1 - (1 - 4*CW2)*CW2*dZZZ1

	Sub6 = Sub5*SW - 2*SW2*dSW1 - CW2*(6*dSW1 + 2*dZe1*SW)

	Sub8 = 2*dZe1 + dZbarfL1(3,1,1) + dZfL1(3,1,1)

	Sub3 = 2*dZe1 + dZZZ1 + dZbarfR1(3,1,1) + dZfR1(3,1,1)

	Sub4 = CW2**2*dZAZ1 - CW*(2*dSW1 + CW2*(Sub3*SW))

	Sub9 = dZZA1 - 4*(CW2*dZZA1 + CW*((dZAA1 + Sub8)*SW))

        Sub7 = 4*CW2**2*SW2*dZAZ1 + 
     &    CW*(Sub6 - (1 - 4*CW2)*CW2*
     &        (SW*(dZbarfL1(3,1,1) + dZfL1(3,1,1))))

        Sub10 = dZZA1*SW - 
     &    CW*(dZAA1 + 2*dZe1 + dZbarfR1(3,1,1) + dZfR1(3,1,1))

	Sub15 = 1/(CW*CW2)*(3*Pi*Sub4 + 2*CW*CW2*(Alfas*Finite*SW))/SW

        Sub16 = 1/(CW*CW2)*
     &    (3*Pi*Sub7 + CW*(2 - 8*CW2)*CW2*(Alfas*Finite*SW))/SW

! testweise wurde hier der Aufruf Cput durch einzelne Aufrufe von C0i ersetzt
! (der Aufruf Cput macht genau das selbe)
! 	call Cput(pave4(cc0),MU2,S,MU2,0.D0,MU2,MU2)
        pave4(PVC(cc0))  = C0i(cc0,MU2,S,MU2,0.D0,MU2,MU2)
        pave4(PVC(cc00)) = C0i(cc00,MU2,S,MU2,0.D0,MU2,MU2)
        pave4(PVC(cc1))  = C0i(cc1,MU2,S,MU2,0.D0,MU2,MU2)
        pave4(PVC(cc2))  = C0i(cc2,MU2,S,MU2,0.D0,MU2,MU2)

!         call Bput(pave5(bb0),S,MU2,MU2)
        pave5(PVC(bb0)) = B0i(bb0,S,MU2,MU2)

	Sub26 = pave4(PVC(cc0)) + pave4(PVC(cc1))

	LOOP(Sfe5, 1,2,1)

!        call Cput(pave2(cc0,Sfe5),MU2,S,MU2,MGl2,MSf2(Sfe5,3,1),
!     &   MSf2(Sfe5,3,1))
        pave2(PVC(cc0),Sfe5)  = C0i(cc0,MU2,S,MU2,MGl2,MSf2(Sfe5,3,1),
     &   MSf2(Sfe5,3,1))
        pave2(PVC(cc00),Sfe5) = C0i(cc00,MU2,S,MU2,MGl2,MSf2(Sfe5,3,1),
     &   MSf2(Sfe5,3,1))
        pave2(PVC(cc1),Sfe5)  = C0i(cc1,MU2,S,MU2,MGl2,MSf2(Sfe5,3,1),
     &   MSf2(Sfe5,3,1))
        pave2(PVC(cc2),Sfe5)  = C0i(cc2,MU2,S,MU2,MGl2,MSf2(Sfe5,3,1),
     &   MSf2(Sfe5,3,1))

        Sub31(Sfe5) = pave2(PVC(cc0),Sfe5) + 
     &    pave2(PVC(cc1),Sfe5) + pave2(PVC(cc2),Sfe5)

	ENDLOOP(Sfe5)

	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)

        Sub22(Sfe5,Sfe6) = 
     &   USf(Sfe6,1,3,1)*USfC(Sfe5,1,3,1) - 
     &    4*USf(Sfe6,2,3,1)*USfC(Sfe5,2,3,1)

        Sub23(Sfe5,Sfe6) = 
     &   -(4*SW2*(USf(Sfe6,2,3,1)*USfC(Sfe5,2,3,1))) + 
     &    USf(Sfe6,1,3,1)*(2*CW2*USfC(Sfe5,1,3,1) + 
     &       USfC(Sfe5,1,3,1))

        Sub24(Sfe5,Sfe6) = 
     &   -(2*SW2*(Sub22(Sfe5,Sfe6)*USf(2,2,2,1)*USfC(2,2,2,1))) + 
     &    Sub23(Sfe5,Sfe6)*USf(2,1,2,1)*USfC(2,1,2,1)

        Sub11(Sfe5,Sfe6) = 
     &   4*SW2*(USf(Sfe6,2,3,1)*USfC(Sfe5,2,3,1)) + 
     &    USf(Sfe6,1,3,1)*(-(4*CW2*USfC(Sfe5,1,3,1)) + 
     &       USfC(Sfe5,1,3,1))

!        call Cput(pave1(cc0,Sfe5,Sfe6),MU2,S,MU2,MGl2,
!     &   MSf2(Sfe6,3,1),MSf2(Sfe5,3,1))
        pave1(PVC(cc0),Sfe5,Sfe6)  = C0i(cc0,MU2,S,MU2,MGl2,
     &   MSf2(Sfe6,3,1),MSf2(Sfe5,3,1))
        pave1(PVC(cc00),Sfe5,Sfe6) = C0i(cc00,MU2,S,MU2,MGl2,
     &   MSf2(Sfe6,3,1),MSf2(Sfe5,3,1))
        pave1(PVC(cc1),Sfe5,Sfe6)  = C0i(cc1,MU2,S,MU2,MGl2,
     &   MSf2(Sfe6,3,1),MSf2(Sfe5,3,1))
        pave1(PVC(cc2),Sfe5,Sfe6)  = C0i(cc2,MU2,S,MU2,MGl2,
     &   MSf2(Sfe6,3,1),MSf2(Sfe5,3,1))
     
!        call Cput(pave3(cc0,Sfe5,Sfe6),MU2,S,MU2,MGl2,
!     &   MSf2(Sfe5,3,1),MSf2(Sfe6,3,1))
        pave3(PVC(cc0),Sfe5,Sfe6)  = C0i(cc0,MU2,S,MU2,MGl2,
     &   MSf2(Sfe5,3,1),MSf2(Sfe6,3,1))
        pave3(PVC(cc00),Sfe5,Sfe6) = C0i(cc00,MU2,S,MU2,MGl2,
     &   MSf2(Sfe5,3,1),MSf2(Sfe6,3,1))
        pave3(PVC(cc1),Sfe5,Sfe6)  = C0i(cc1,MU2,S,MU2,MGl2,
     &   MSf2(Sfe5,3,1),MSf2(Sfe6,3,1))
        pave3(PVC(cc2),Sfe5,Sfe6)  = C0i(cc2,MU2,S,MU2,MGl2,
     &   MSf2(Sfe5,3,1),MSf2(Sfe6,3,1))

        Sub25(Sfe5,Sfe6) = 
     &   pave1(PVC(cc0),Sfe5,Sfe6) + pave1(PVC(cc1),Sfe5,Sfe6) + 
     &    pave1(PVC(cc2),Sfe5,Sfe6)

	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)

#include "contains.h"

	end
